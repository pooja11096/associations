  // let data = await users.findOne({ where:{
    //   id:req.params.id
    // },
    //   include: [{association:db.userDetails}]
    // }).then(function(user){
    //   if(req.body.user_detail){
    //     return  user.user_detail.update(newData,{where:{user_id:req.params.id}})
    //   }
    // })
   
    // .then(function(userd){
    //   if(req.body.user_detail){
    //       return userd.user_detail.update(newData,{where:{user_id:req.params.id}}).then(function(result){
    //         return result;  
    //       })
    //   }else{
    //     throw new Error("no data found");
    //   }
    // });


      // await users.update(newData,{where:{id:req.params.id }})
      // await user_detail.update(newData,{where:{user_id:req.params.id}})

      // await user_detail.save();


      // self.updateUser = async (req, res) => {
//   try {
//     // let id = req.params.id;
//     let newData = {
//       firstname: req.body.firstname,
//       lastname: req.body.lastname,
//       email: req.body.email,
//       user_detail:req.body.user_detail,
//       posts: req.body.posts   
//     };
//     console.log(newData);
//     let data = users.update(newData,{ where: { id: req.params.id } },{
//       include: [{association:db.userDetails},
//         {

//           association: db.userPost,
//           include: [db.postTag]
//         },
//       ],
//     });

//     console.log(data);

//     if (data && data.id) {
//       await user_detail.update({
//         // inserts data in user_detail table (onetoone)
//         password: req.body.password,
//         where: {
//           user_id: data.id,
//         },
//       });

//       let postlength = req.body.posts.length;
//       var postid = [];
//       var tagid = [];

//       if (req.body.posts) {
//         for (var i = 0; i < postlength; i++) {
//           let postData = {
//             name: req.body.posts[i].name,
//             title: req.body.posts[i].title,
//             content: req.body.posts[i].content,
//             user_id: data.id,
//           };

//           const insertedPost = await posts.create(postData); // inserts data in posts table (onetomany )
//           postid.push(insertedPost.id);

//           let tagL = req.body.posts[i].tags.length;
//           if (tagL) {
//             for (var j = 0; j < tagL; j++) {
//               let tagData = {
//                 name: req.body.posts[i].tags[j].name,
//               };
//               const insertedTag = await tags.create(tagData); // inserts data in tags table (manytomany )
//               tagid.push(insertedTag.id);

//               await post_tags.create({
//                 //inserts data in pivot table post_tags
//                 postId: insertedPost.id,
//                 tagId: insertedTag.id,
//               });
//             }
//           }
//         }
//       }

//       console.log("postids", postid);
//       console.log("tagids", tagid);
//     }

//     return res.status(200).json({
//       message: "data updated",
//     });
//   } catch (error) {
//     console.log({ error });
//   }
// };


self.createUser = async (req, res) => {
  if (!req.body.firstname || !req.body.lastname || !req.body.email) {
    res.status(500).send({ message: "Bad request" });
  }
  try {
    // const newUser = {
    //   firstname: req.body.firstname,
    //   lastname: req.body.lastname,
    //   email: req.body.email,
    //   post: req.body.posts,

    // };

    // let data = await users.create(newUser); //creates user

    // if (data && data.id) {
    //   await user_detail.create({
    //     // inserts data in user_detail table (onetoone)
    //     password: req.body.password,
    //     user_id: data.id,
    //   });

    //   let postlength = req.body.posts.length;
    //   var postid = [];
    //   var tagid = [];

    //   if (req.body.posts) {
    //     for (var i = 0; i < postlength; i++) {
    //       let postData = {
    //         name: req.body.posts[i].name,
    //         title: req.body.posts[i].title,
    //         content: req.body.posts[i].content,
    //         user_id: data.id,
    //       };

    //       const insertedPost = await posts.create(postData); // inserts data in posts table (onetomany )
    //       postid.push(insertedPost.id);

    //       let tagL = req.body.posts[i].tags.length;
    //       if (tagL) {
    //         for (var j = 0; j < tagL; j++) {
    //           let tagData = {
    //             name: req.body.posts[i].tags[j].name,
    //           };
    //           const insertedTag = await tags.create(tagData); // inserts data in tags table (manytomany )
    //           tagid.push(insertedTag.id);

    //           await post_tags.create({
    //             //inserts data in pivot table post_tags
    //             postId: insertedPost.id,
    //             tagId: insertedTag.id,
    //           });
    //         }
    //       }
    //     }
    //   }

    //   console.log("postids", postid);
    //   console.log("tagids", tagid);
    // }
    let postD = [];
    let tagD = [];
    let DD = {};

    if (req.body.posts) {
      let postL = req.body.posts.length;
      
      for (var i = 0; i < postL; i++) {
        if (req.body.posts.length) {
          let tagL = req.body.posts[i].tags.length;

          let postData = {
            name: req.body.posts[i].name,
            title: req.body.posts[i].title,
            content: req.body.posts[i].content,
          };              

          if (tagL) {
            for (var j = 0; j < tagL; j++) {
              var tagData = {
                tags: {
                  name: req.body.posts[i].tags[j].name
                },
              };
              //  tagD.push(tagData);
              // let ob = Object.assign({postData,tagData});
              // console.log("ob",ob);
             
              // const cA = Array.prototype.concat(postD,tagData);
              // console.log("ca",cA);
              // Array.prototype.push.apply(postD,tagData);
              // Object.assign({DD,tagData})
              // var ob={
              //   tags:{}
              // }

              // var obj = Object.assign(ob,tagData);
              // console.log("obj",obj);
              console.log("tagData",tagData);
              var D = {...postData,...tagData};
            console.log("d",D);

            }
            
            postD.push(D);
          }
        }
      }
    }

    console.log("postdata", postD);
    console.log("tagdata", tagD);

    let data = await users.create(
      {
        firstname: req.body.firstname,
        lastname: req.body.lastname,
        email: req.body.email,
        user_detail:req.body.user_detail,
        posts: req.body.posts    
      },
      {
        include: [{association:db.userDetails},
          {

            association: db.userPost,
            include: [db.postTag]
          },
        ],
      }
    );
    return res.status(200).json({
      message: "data",
      data: data,
    });
  } catch (err) {
    console.log({ err });
  }
};